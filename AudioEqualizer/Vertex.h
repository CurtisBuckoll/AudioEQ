/*========================================================================

    Name:     Vertex.h

    Date:     January 2017

    Author:   Curtis Buckoll

    Overview:

        Declaration of some general purpose vector, colour, and vertex 
    structs with useful operations.

========================================================================*/

#pragma once

#include <stdint.h>

//========================================================================
// vec4 - 4 x 1 floating point vector
struct vec4 {

    //--------------------------------------------------------------
    //
	vec4();

    //--------------------------------------------------------------
    //
    vec4( float x, float y, float z, float w = 1.0f );
	void normalize();

    //--------------------------------------------------------------
    // Homogeneous division
	void hgDivision();

    //--------------------------------------------------------------
    //
    float dot( const vec4& rhs ) const;

    //--------------------------------------------------------------
    //
    vec4 cross( const vec4& V2 ) const;

    //--------------------------------------------------------------
    //
	float length();

    //--------------------------------------------------------------
    //
	void print();

    //--------------------------------------------------------------
    //
    float operator[]( int i ) const;

    //--------------------------------------------------------------
    //
    vec4 operator*( float scalar ) const;

    //--------------------------------------------------------------
    //
    vec4 operator-( const vec4& p2 ) const;

    //--------------------------------------------------------------
    //
    vec4 operator+( const vec4& p2 ) const;

    //--------------------------------------------------------------
    //
    bool operator==( const vec4& p2 ) const;

    //--------------------------------------------------------------
    //
    bool operator!=( const vec4& p2 ) const;

    //--------------------------------------------------------------
    // Public Data Members
    //--------------------------------------------------------------

    float x;
    float y;
    float z;
    float w;
    unsigned int color;
};

//========================================================================
// Color - for storing colour values between 0 and 1
struct Color {

    //--------------------------------------------------------------
    //
    Color();

    //--------------------------------------------------------------
    //
    Color( float R, float G, float B );

    //--------------------------------------------------------------
    // Component-wise multiplication
    Color operator*( Color rhs ) const;

    //--------------------------------------------------------------
	// Scalar multiplication
    Color operator*( float scalar ) const;

    //--------------------------------------------------------------
    //
    Color operator+( Color rhs ) const;

    //--------------------------------------------------------------
    //
    Color operator-( Color rhs ) const;

    //--------------------------------------------------------------
    // Public Data Members
    //--------------------------------------------------------------

    float r;
    float g;
    float b;
};

//========================================================================
// Color256 - stores colour values RGB each in a single byte unit.
struct Color256 {

    //--------------------------------------------------------------
    //
    Color256();

    //--------------------------------------------------------------
    //
    Color256( unsigned char R, 
              unsigned char G, 
              unsigned char B );

    //--------------------------------------------------------------
    //
    Color256( Color color );

    //--------------------------------------------------------------
    //
    unsigned int packColor();

    //--------------------------------------------------------------
    //
    Color convertToFloat();

    //--------------------------------------------------------------
    //
    bool operator==( const Color256& rhs ) const;

    //--------------------------------------------------------------
	// Scalar multiplication
    Color256 operator*( float scalar ) const;

    //--------------------------------------------------------------
    // Public Data Members
    //--------------------------------------------------------------

    unsigned char r;
    unsigned char g;
    unsigned char b;
};

//========================================================================
// YUV
struct YUV
{
    //--------------------------------------------------------------
    //
    YUV()
        : Y( 0 )
        , U( 0 )
        , V( 0 )
    { }

    //--------------------------------------------------------------
    //
    int32_t Y;
    int32_t U;
    int32_t V;
};

//========================================================================
// Vertex
struct Vertex
{
    //--------------------------------------------------------------
    //
    Vertex();

    //--------------------------------------------------------------
    //
    Vertex( const vec4& Pos, 
            const vec4& Normal, 
            Color256 Colour );

    //--------------------------------------------------------------
    //
    void print();

    //--------------------------------------------------------------
    // Public Data Members
    //--------------------------------------------------------------

    vec4 pos;
    vec4 normal;
    Color256 color;
};
